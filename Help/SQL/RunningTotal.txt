SELECT
	ID,
	ID_ACCOUNT,
	DATE_INTEGRATION,
	AMOUNT_OPERATION,
	SUM(AMOUNT_OPERATION) OVER ( PARTITION BY ID_ACCOUNT ORDER BY ID ) AS RUNNING_TOTAL
FROM 
(
	SELECT
		-1000 + ROW_NUMBER() OVER (ORDER BY ID)-1 AS ID,
		ID AS ID_ACCOUNT,
		START_AMOUNT AS AMOUNT_OPERATION,
		'1900-01-01' as DATE_INTEGRATION
	FROM ref.ACCOUNT
	UNION
	SELECT  AST.ID ,
			AST.ID_ACCOUNT,
			AST.AMOUNT_OPERATION,
			AST.DATE_INTEGRATION
			--SUM(AMOUNT_OPERATION) OVER ( PARTITION BY AST.ID_ACCOUNT ORDER BY AST.ID ) AS RunningTotal
	FROM    [as].ACCOUNT_STATEMENT AST
) as T
GROUP BY ID,ID_ACCOUNT,DATE_INTEGRATION,AMOUNT_OPERATION


------------------------------------------------------------------------------

SELECT
	ID,
	ID_ACCOUNT,
	DATE_INTEGRATION,
	AMOUNT_OPERATION,
	SUM(AMOUNT_OPERATION) OVER ( PARTITION BY ID_ACCOUNT ORDER BY date_integration ) AS RUNNING_TOTAL
FROM 
(
	SELECT
		-1000 + ROW_NUMBER() OVER (ORDER BY ID)-1 AS ID,
		ID AS ID_ACCOUNT,
		START_AMOUNT AS AMOUNT_OPERATION,
		'1900-01-01' as DATE_INTEGRATION
	FROM ref.ACCOUNT
	WHERE ID=2
	UNION
	SELECT  AST.ID ,
			AST.ID_ACCOUNT,
			AST.AMOUNT_OPERATION,
			AST.DATE_INTEGRATION
			--SUM(AMOUNT_OPERATION) OVER ( PARTITION BY AST.ID_ACCOUNT ORDER BY AST.ID ) AS RunningTotal
	FROM    [as].ACCOUNT_STATEMENT AST
	WHERE ID_ACCOUNT=2
	--order by DATE_INTEGRATION
	
) as T

GROUP BY ID,ID_ACCOUNT,DATE_INTEGRATION,AMOUNT_OPERATION
ORDER BY DATE_INTEGRATION